<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="English" xml:space="preserve">
    <value>text\translated text
Car rental\Car rental
Sedan\Sedan
Minivan\Minivan
Vehicle\Vehicle
Vehicles\Vehicles
Rental\Rental
Rentals\Rentals
Sort\Sort
By ID\By ID
By name\By name
By type\By type
By fuel percentage\By fuel percentage
By damage percentage\By damage percentage
By owner name\By owner name
By owner phone\By owner phone
By return date\By return date
Database\Database
Connect to database\Connect to database
Local file\Local file
Load from local file\Load from local file
Save to local file\Save to local file
Order logs\Order logs
Open\Open
Delete\Delete
Language\Language
ID\ID
Name\Name
Type\Type
Vehicle ID\Vehicle ID
Vehicle name\Vehicle name
Vehicle type\Vehicle type
Vehicle fuel percentage\Vehicle fuel (%)
Vehicle damage percentage\Vehicle damage (%)
Damage percent\Damage (%)
Damage percentage\Damage (%)
Fuel percent\Fuel (%)
Fuel percentage\Fuel (%)
Select\Select
Rent\Rent
Rent vehicle\Rent vehicle
Cancel\Cancel
Owner name\Owner name
Owner phone\Owner phone
Owner phone number\Owner phone number
Return date\Return date
Return\Return
Return vehicle\Return vehicle
Fuel\Fuel
Damage\Damage
Returned on\Returned on
Add vehicle\Add vehicle
Remove selected\Remove selected
Remove last\Remove last
Select all\Select all
Fill in the details of the vehicle at return\Fill in the details of the vehicle at return
Action\Action
Consequence\Consequence
Are you sure\Are you sure
Confirm\Confirm
Languages\Languages
Choose language\Choose language
Add language\Add language
Apply selected\Apply selected
Rename selected\Rename selected
Remove selected\Remove selected
load vehicles and rentals from the database\load vehicles and rentals from the database
existing vehicles and rentals in the program will be removed\existing vehicles and rentals in the program will be removed
save vehicles and rentals to the database\save vehicles and rentals to the database
existing vehicles and rentals in the database will be removed\existing vehicles and rentals in the database will be removed
save vehicles and rentals to local file\save vehicles and rentals to local file
existing local file will be deleted\existing local file will be deleted
load vehicles and rentals from local file\load vehicles and rentals from local file
remove the last vehicle\remove the last vehicle
remove the last rental\remove the last rental
remove the selected vehicles\remove the selected vehicles
remove the selected rentals\remove the selected rentals
delete the existing log\delete the existing log
There are no vehicles to select\There are no vehicles to select
There are no vehicles to remove\There are no vehicles to remove
No vehicles have been selected\No vehicles have been selected
There are no rentals to select\There are no rentals to select
There are no rentals to remove\There are no rentals to remove
No rentals have been selected\No rentals have been selected
Log file doesn't exist\Log file doesn't exist
Vehicle name must be provided\Vehicle name must be provided
Owner's name must be provided\Owner's name must be provided
Owner's phone must be provided\Owner's phone must be provided
Data source must be provided\Data source must be provided
UserID must be provided\UserID must be provided
Password must be provided\Password must be provided
Initial catalog must be provided\Initial catalog must be provided
Data source\Data source
UserID\UserID
Password\Password
Initial catalog\Initial catalog</value>
  </data>
</root>